name: cmake-Ubuntu-gcc_10

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Initialize compiler (GCC)
      
      run: |
          sudo apt update
          sudo apt install gcc-10 g++-10
          sudo update-alternatives \
            --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
            --slave /usr/bin/g++ g++  /usr/bin/g++-10 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-10

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      env:
        CC:   gcc-10
        CXX:  g++-10

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      env:
        CC:   gcc-10
        CXX:  g++-10

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  shell: bash
    #  # Execute tests defined by the CMake configuration.  
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C $BUILD_TYPE
